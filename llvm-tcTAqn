define i32 @main() {
	%l0 = alloca i32, align 4
	%l1 = alloca i32, align 4
	%l2 = alloca [2 x i32], align 16
	%l3 = alloca [2 x [3 x i32]], align 16
	%l4 = alloca i32, align 4
	%t5 = mul nsw i32 0, 4
	%t13 = getelementptr inbounds [2 x i32], [2 x i32]* %l2, i64 0, i64 0
	%t14 = bitcast i32* %t13 to i8*
	%t16 = sext i32 %t5 to i64
	%t15 = getelementptr inbounds i8, i8* %t14, i64 %t16
	%t6 = bitcast i8* %t15 to i32*
	store i32 1, i32* %t6, align 4
	%t7 = mul nsw i32 1, 3
	%t8 = add nsw i32 %t7, 1
	%t9 = mul nsw i32 %t8, 4
	%t17 = getelementptr inbounds [2 x [3 x i32]], [2 x [3 x i32]]* %l3, i64 0, i64 0, i64 0
	%t18 = bitcast i32* %t17 to i8*
	%t20 = sext i32 %t9 to i64
	%t19 = getelementptr inbounds i8, i8* %t18, i64 %t20
	%t10 = bitcast i8* %t19 to i32*
	store i32 2, i32* %t10, align 4
	%t21 = load i32, i32* %t12, align 4
	store i32 %t21, i32* %l4, align 4
	%t11 = mul nsw i32 0, 4
	%t22 = getelementptr inbounds [2 x i32], [2 x i32]* %l2, i64 0, i64 0
	%t23 = bitcast i32* %t22 to i8*
	%t25 = sext i32 %t11 to i64
	%t24 = getelementptr inbounds i8, i8* %t23, i64 %t25
	%t12 = bitcast i8* %t24 to i32*
	%t26 = load i32, i32* %l4, align 4
	store i32 %t26, i32* %l0, align 4
	%t27 = load i32, i32* %l0, align 4
	ret i32 %t27
}
declare i32 @getint(...);
declare i32 @getch(...);
declare void @putint(i32);
declare void @putch(i32);
declare void @putstr(i8*);
declare i32 @getarray(i32*);
declare void @putarray(i32, i32*);
declare float @getfloat(...);
declare void @putfloat(float);
declare i32 @getfarray(float*);
declare void @putfarray(i32, float*);
