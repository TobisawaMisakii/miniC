define i32 @add([5 x i32]* %t0, i32* %t1) {
	%l2 = alloca [5 x i32]*, align 8 ; variable: a
	%l3 = alloca i32*, align 8 ; variable: b
	%l4 = alloca i32, align 4
	store [5 x i32]* %t0, [5 x i32]** %l2, align 8
	store i32* %t1, i32** %l3, align 8
	%t5 = mul nsw i32 0, 5
	%t6 = add nsw i32 %t5, 0
	%t8 = mul nsw i32 %t6, 4
	%t16 = load [5 x i32]*, [5 x i32]** %l2, align 8
	%t17 = getelementptr inbounds [5 x i32], [5 x i32]* %t16, i64 0, i64 0
	%t18 = bitcast i32* %t17 to i8*
	%t20 = sext i32 %t8 to i64
	%t19 = getelementptr inbounds i8, i8* %t18, i64 %t20
	%t7 = bitcast i8* %t19 to i32*
	%t11 = mul nsw i32 0, 4
	%t21 = load i32*, i32** %l3, align 8
	%t22 = getelementptr inbounds i32, i32* %t21, i64 0
	%t23 = bitcast i32* %t22 to i8*
	%t25 = sext i32 %t11 to i64
	%t24 = getelementptr inbounds i8, i8* %t23, i64 %t25
	%t10 = bitcast i8* %t24 to i32*
	%t13 = load i32, i32* %t7, align 4
	%t14 = load i32, i32* %t10, align 4
	%t15 = add nsw i32 %t13, %t14
	store i32 %t15, i32* %l4, align 4
	%t26 = load i32, i32* %l4, align 4
	ret i32 %t26
}
define i32 @main() {
	%l0 = alloca i32, align 4
	%l1 = alloca [3 x [5 x i32]], align 16 ; variable: a
	%l2 = alloca [3 x i32], align 16 ; variable: b
	%t3 = mul nsw i32 0, 5
	%t4 = add nsw i32 %t3, 0
	%t6 = mul nsw i32 %t4, 4
	%t17 = getelementptr inbounds [3 x [5 x i32]], [3 x [5 x i32]]* %l1, i64 0, i64 0, i64 0
	%t18 = bitcast i32* %t17 to i8*
	%t20 = sext i32 %t6 to i64
	%t19 = getelementptr inbounds i8, i8* %t18, i64 %t20
	%t5 = bitcast i8* %t19 to i32*
	store i32 2, i32* %t5, align 4
	%t9 = mul nsw i32 0, 4
	%t21 = getelementptr inbounds [3 x i32], [3 x i32]* %l2, i64 0, i64 0
	%t22 = bitcast i32* %t21 to i8*
	%t24 = sext i32 %t9 to i64
	%t23 = getelementptr inbounds i8, i8* %t22, i64 %t24
	%t8 = bitcast i8* %t23 to i32*
	store i32 1, i32* %t8, align 4
	%t12 = mul nsw i32 0, 4
	%t25 = getelementptr inbounds [3 x i32], [3 x i32]* %l2, i64 0, i64 0
	%t26 = bitcast i32* %t25 to i8*
	%t28 = sext i32 %t12 to i64
	%t27 = getelementptr inbounds i8, i8* %t26, i64 %t28
	%t11 = bitcast i8* %t27 to i32*
	%t14 = load i32, i32* %t11, align 4
	%t15 = icmp ne i32 %t14, 0
	%t29 = getelementptr inbounds [3 x [5 x i32]], [3 x [5 x i32]]* %l1, i64 0, i64 0, i64 0
	%t30 = bitcast i32** %t29 to [5 x i32]*
	%t31 = getelementptr inbounds [3 x i32], [3 x i32]* %l2, i64 0, i64 0
	%t16 = call i32 @add([5 x i32]* %t30, i32* %t31)
	store i32 %t16, i32* %l0, align 4
	br label %.L2
.L2:
	%t32 = load i32, i32* %l0, align 4
	ret i32 %t32
}
declare i32 @getint(...);
declare i32 @getch(...);
declare void @putint(i32);
declare void @putch(i32);
declare void @putstr(i8*);
declare i32 @getarray(i32*);
declare void @putarray(i32, i32*);
declare float @getfloat(...);
declare void @putfloat(float);
declare i32 @getfarray(float*);
declare void @putfarray(i32, float*);
