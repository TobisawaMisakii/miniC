define i32 @add(i32 %t0, i32 %t1)
{
	declare i32 %l2 ; 1:a
	declare i32 %l3 ; 1:b
	declare i32 %l4
	declare i32 %t5
	entry
	%l2 = %t0
	%l3 = %t1
	%t5 = add %l2, %l3
	%l4 = %t5
	br label .L6
.L6:
	exit %l4
}
define i32 @sub()
{
	declare i32 %l0
	entry
	%l0 = 1
	br label .L1
.L1:
	exit %l0
}
define i32 @main()
{
	declare i32 %l0
	declare i32 %l1[10] ;  1:a
	declare i32 %l2[2][2] ;  1:b
	declare i32 %l3
	declare i32 %l4
	declare i32 %t5
	declare i32* %t6
	declare i32 %t7
	declare i32 %t8
	declare i32 %t9
	declare i32* %t10
	declare i32 %t11
	declare i32 %t12
	declare i32* %t13
	declare i32 %t14
	declare i32 %t15
	declare i32 %t16
	declare i32* %t17
	declare i32 %t18
	declare i32 %t19
	entry
	%t5 = mul 1, 4
	%t6 = add %l1, %t5
	*%t6 = 1
	%t7 = mul 0, 2
	%t8 = add %t7, 0
	%t9 = mul %t8, 4
	%t10 = add %l2, %t9
	*%t10 = 2
	%t11 = call i32 @sub()
	%t12 = mul 1, 4
	%t13 = add %l1, %t12
	%l3 = *%t13
	%t14 = mul 0, 2
	%t15 = add %t14, 0
	%t16 = mul %t15, 4
	%t17 = add %l2, %t16
	%l4 = *%t17
	%t18 = call i32 @add(i32 %l3, i32 %l4)
	%t19 = add %t11, %t18
	%l0 = %t19
	br label .L20
.L20:
	exit %l0
}
